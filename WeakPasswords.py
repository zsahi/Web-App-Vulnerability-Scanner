import requests
from bs4 import BeautifulSoup
import CommonFunctions
import Config


def check_weak_passwords(loginFormEndpoints,findings):
    headers = {'User-Agent': Config.user_agent}
    req = requests.Session()
    for loginFormEndpoint in loginFormEndpoints:
        if "wp-login" in loginFormEndpoint.action:
            continue

        action = loginFormEndpoint.action
        for common_password in Config.common_passwords:
            loginFormEndpoint = CommonFunctions.refetch_form(req, loginFormEndpoint)
            if loginFormEndpoint == None:
                continue

            params_dynamic = loginFormEndpoint.params['dynamic']
            keys = list(params_dynamic.keys())
            if len(keys) < 2:
                break
            params_dynamic[keys[0]] = "admin"
            params_dynamic[keys[1]] = common_password

            params = loginFormEndpoint.params['static']
            params.update(params_dynamic)
            try:
                if loginFormEndpoint.method.lower() == "get":
                    r = req.get(action, headers=headers, params=params, allow_redirects=True,
                                proxies={"http": Config.http_proxy, "https": Config.https_proxy}, verify=False, timeout=Config.timeout)
                else:
                    r = req.post(action, headers=headers, data=params, allow_redirects=True,
                                 proxies={"http": Config.http_proxy, "https": Config.https_proxy}, verify=False, timeout=Config.timeout)

            except requests.exceptions.RequestException as e:
                return
            if r.status_code != 200:
                return
            try:
                response_text = r.content.decode('utf-8', errors='ignore')
                if len(response_text) == 0:
                    continue
                soup1 = BeautifulSoup(response_text, "html.parser")
            except:
                return

            flag1 = False
            for input in soup1.findAll('input'):
                if input.has_attr('type') and input['type'] == 'password':
                    flag1 = True
            if flag1 == False:
                findings["WeakPassword"]={"method":loginFormEndpoint.method,"action":loginFormEndpoint.action, "password": common_password}
                return

